B0;136;0c---------

main.sh 

BLAST benchmark:

Time to run blast will go roughly as N^2 where N is the number
of organisms (assuming they have roughly the same number of genes)
and as k^2 where k is the number of genes per organism.

Running on 12 (reasonably fast) cores BLASTP took on average
somewhere around 6 seconds per pair of organisms... so on my test set
of 69 organisms it took

69^2 * 6 seconds * 1 min/60 sec * 1 hour / 60 min = 8 hours

to run BLASTP all vs. all. The algorithm is embarassingly parallel,
so scale up or down according to the number of cores you have.

BLASTN all vs. all takes less time but will still be in the hours+
range for a reasonably large number of genomes.
On the same machine (using 12 cores of processing) it took about 
1.5 seconds per pair of organisms.

69^2 * 1.5 * 1/60 * 1/60 = 2 hours

Loading up the SQLite database took about 2 hours beyond these steps.
This will roughly increase as O(N^2) as well (depending on the number
of BLAST hits between each pair of organisms, whcih could vary wildly).
Unlike BLAST, this step is not parallelized.

Everything else done in main.sh is completely insignificant in time
compared to the BLAST computation and data loading steps.

--------

main2.sh

MCL benchmark:

Most of the time in running MCL is spent querying the database for
all BLAST hits between a specific group of organisms and calculating the
desired homology scores.

It took me about 1 minute per million edges to perform this query
(when there were 69 organisms in the database). Obviously this time will
increase as the database gets bigger.

There are about 20 million BLAST hits between 30 closely-related prokarytotes 
(~3000 genes/organisms) with an E-value cutoff of 1E-5.

Running MCL on all BLAST hits with 69 organisms took about 45-60 minutes
(including importing the data into the database) depending on the cutoff...



